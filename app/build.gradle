plugins {
    id 'application'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // SLF4J API
    implementation 'org.slf4j:slf4j-api:2.0.7'
    // Logback (реализация SLF4J)
    implementation 'ch.qos.logback:logback-classic:1.4.7'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // Зависимости для работы с excel
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    //БД
    implementation 'org.postgresql:postgresql:42.6.0'

    // Зависимости для тестирования
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1' // JUnit 5
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' // JUnit 5 Engine
    testImplementation 'org.mockito:mockito-core:5.3.1' // Mockito
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1' // Mockito для JUnit 5
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

application {
    mainClass = 'com.AlanTitor.socks.Main'
}
